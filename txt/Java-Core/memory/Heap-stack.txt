## Heap Stack

Heap и Stack - это две области памяти, используемые в программировании для хранения данных и управления выполнением программы. Вот основные различия между ними:

### Назначение:

- Heap (куча): Используется для динамического выделения памяти во время выполнения программы для хранения объектов и данных, созданных в процессе работы программы. Объекты в куче существуют в течение всего времени выполнения программы и доступны из любого места программы.
- Stack (стек): Используется для хранения локальных переменных и данных времени выполнения методов. Каждый раз, когда вызывается метод, для его локальных переменных и контекста выделяется новый фрейм в стеке, который затем освобождается при завершении метода.
### Управление памятью:

- Heap: Управляется автоматической системой сборки мусора, которая автоматически освобождает память, занимаемую объектами, которые больше не используются.
- Stack: Управляется системой управления стеком, которая автоматически выделяет и освобождает память для локальных переменных и данных времени выполнения методов.
### Скорость доступа:

- Heap: Объекты в куче доступны через указатели, что может замедлить доступ к ним по сравнению с локальными переменными в стеке.
- Stack: Доступ к локальным переменным в стеке осуществляется намного быстрее, чем доступ к объектам в куче, потому что данные находятся ближе к процессору.
### Размер и ограничения:

- Heap: Память кучи обычно больше и динамически расширяется по мере необходимости, хотя может существовать ограничение размера, зависящее от операционной системы и настроек JVM.
- Stack: Размер стека обычно ограничен и не может динамически расширяться. Превышение лимита может привести к переполнению стека (StackOverflowError).
### Жизненный цикл:

- Heap: Объекты в куче могут существовать дольше времени выполнения программы и уничтожаются только при необходимости сборки мусора.
- Stack: Локальные переменные и данные времени выполнения методов в стеке существуют только во время выполнения метода и уничтожаются при завершении метода.
