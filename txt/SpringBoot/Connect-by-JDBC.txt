### Mention the steps to connect Spring Boot application to a database using JDBC.

Mention the steps to connect Spring Boot application to a database using JDBC.
Spring Boot starter projects provide the required libraries to connect the application with JDBC. So, for example, if you just have to create an application  and connect it with MySQL database, you can follow the below steps:

Step 1: Create a database in MySQL
```roomsql
CREATE DATABASE example;
```
Step 2: Then you have to create a table inside this database.

```roomsql
CREATE TABLE customers(customerid INT PRIMARY KEY NOT NULL AUTO_INCREMENT, customername VARCHAR(255));  
```
Step 3: Now, create a Spring Boot project and provide the required details

Step 4: Add the JDBC, MySQL and web dependencies.

Step 5: Once the project is created, you have to configure the database into application properties

```
spring.datasource.url=jdbc:mysql://localhost:3306/example
spring.datasource.username=root  
spring.datasource.password=edureka  
spring.jpa.hibernate.ddl-auto=create-drop 
```
 
Step 6: The main application.java class should have the following code:

```java
package com.edureka;  
import org.springframework.boot.SpringApplication;  
import org.springframework.boot.autoconfigure.SpringBootApplication;  

@SpringBootApplication  
public class SampleApplication {  
    public static void main(String[] args) {  
    SpringApplication.run(SampleApplication.class, args);  
    }  
}
```

Step 7: Next, you have to create a controller to handle the HTTP requests, by mentioning the following code:

```java
package com.edureka;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.web.bind.annotation.RestController;

@RestController
public class JdbcController {
    @Autowired
    JdbcTemplate jdbc;
    @RequestMapping("/insert")
    public String index(){
        jdbc.execute("insert into customers(name)values('Aryya')");
        return "Data Entry Successful";
    }
}
```
Step 8: Finally, execute this project as a Java application.

Step 9: Next, open the URL (localhost:8080/insert), and you will see the output as Data Entry Successful. You can also go forward and check if the data is entered into the table.
